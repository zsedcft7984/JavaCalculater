package calculator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Calculator {
    private JFrame frame;
    private JTextField textField;
    private JTextField resultField;
    private JPanel buttonPanel;

    // 생성자: 외부에서 호출할 수 있도록 설정
    public Calculator() {
        // JFrame 생성
        frame = new JFrame("계산기");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 600);
        frame.setLayout(new BoxLayout(frame.getContentPane(), BoxLayout.Y_AXIS));  // 수직 방향으로 컴포넌트를 배치

        // 상단 텍스트 표시 필드 (수식 입력)
        textField = TextFieldCreator.createFormulaTextField();
        
        // 숫자만 입력되도록 제한하는 KeyListener 추가
        textField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char keyChar = e.getKeyChar();
                // 숫자, 연산자 (+, -, *, /, =), Backspace만 허용
                if (!Character.isDigit(keyChar) && keyChar != KeyEvent.VK_BACK_SPACE && keyChar != '+' 
                        && keyChar != '-' && keyChar != '*' && keyChar != '/' && keyChar != '=') {
                    e.consume();  // 불필요한 입력을 막음
                }
            }
        });

        frame.add(textField);

        // 결과 텍스트 필드 (결과 표시용)
        resultField = TextFieldCreator.createResultTextField();
        frame.add(resultField);  // 결과 필드를 하단에 배치

        // 버튼 패널
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(6, 4, 5, 5)); // 5행 4열 그리드 레이아웃
        buttonPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // 버튼 배열
        String[] buttons = {
            "%", "CE", "C", "X", 
            "1/x", "x²", "√x", "÷", 
            "7", "8", "9", "×", 
            "4", "5", "6", "-", 
            "1", "2", "3", "+", 
            "+/-", "0", ".", "="
        };

        // 버튼 추가 (버튼 크기 조정)
        for (String text : buttons) {
            JButton button = new Button(text).createButton();  // 외부 Button 클래스 사용
            button.setPreferredSize(new Dimension(80, 60));  // 버튼 크기 설정
            
            button.addActionListener(new Action(textField));  // 버튼 클릭 시 Action 클래스에서 처리

            buttonPanel.add(button);
        }

        frame.add(buttonPanel);
    }

    // 계산기 화면을 표시하는 메서드
    public void show() {
        frame.setVisible(true);
    }
}
class Action implements ActionListener {
    private JTextField textField;
    private boolean firstInput = true;  // 첫 번째 입력을 확인하는 플래그

    // 생성자: 버튼 클릭 이벤트를 처리할 텍스트 필드 전달
    public Action(JTextField textField) {
        this.textField = textField;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JButton sourceButton = (JButton) e.getSource();
        String buttonText = sourceButton.getText();

        // 첫 번째 입력에는 숫자만 입력 가능
        if (firstInput) {
            // 첫 번째 입력이 숫자 버튼이면, 해당 숫자를 텍스트 필드에 설정하고 첫 입력 플래그를 false로 설정
            if (buttonText.matches("[0-9]")) {
                textField.setText(buttonText);  // 첫 번째 숫자 입력
                firstInput = false;  // 첫 번째 입력 완료
            }
        } else {
            // 첫 번째 입력 이후에는 숫자, 연산자 모두 입력 가능
            String currentText = textField.getText();

            // 숫자 버튼이면 기존 숫자 뒤에 추가
            if (buttonText.matches("[0-9]")) {
                textField.setText(currentText + buttonText);  // 기존 숫자 뒤에 새 숫자 추가
            } else if (buttonText.matches("[+\\-*/=]")) {
                textField.setText(currentText + buttonText);  // 연산자 뒤에 추가
            }
        }
    }
}

package calculator;

import javax.swing.*;
import java.awt.event.*;

public class Action2 implements ActionListener {
    private JTextField textField;   // 수식 입력용 필드
    private JTextField resultField; // 결과 표시용 필드

    private static boolean firstInput = true; // 첫 입력 상태
    private static double operand1 = 0;  // 첫 번째 피연산자
    private static double operand2 = 0;  // 두 번째 피연산자
    private static double previousResult = 0;  // 이전 계산값 (결과 기억)
    private static String currentOperator = ""; // 현재 연산자
    private static String pendingOperator = ""; // 대기 중인 새 연산자

    // 생성자
    public Action2(JTextField textField, JTextField resultField) {
        this.textField = textField;
        this.resultField = resultField;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();

        // 숫자와 소수점 처리
        if ("0123456789.".contains(command)) {
            if (firstInput) {
                textField.setText(command);  // 새로운 입력 시작
                firstInput = false;
            } else {
                textField.setText(textField.getText() + command); // 숫자나 소수점을 추가
            }
        }
        // 연산자 처리: +, -, ×, ÷
        else if ("+-×÷".contains(command)) {
            if (!currentOperator.isEmpty()) {
                operand2 = Double.parseDouble(textField.getText());
                calculateResult();  // 기존 연산 수행
            } else {
                operand1 = Double.parseDouble(textField.getText());
            }

            // 연산자 업데이트
            currentOperator = command;
            pendingOperator = ""; // 대기 연산자 초기화
            textField.setText(""); // 다음 피연산자 입력 준비
            firstInput = true;
        }
        // "=" 버튼 처리 (계산 실행)
        else if (command.equals("=")) {
            if (!currentOperator.isEmpty()) {
                operand2 = Double.parseDouble(textField.getText());
                calculateResult();
                currentOperator = ""; // 연산자 초기화
            }

            firstInput = true; // 새로운 입력 준비
        }
        // "C" 버튼 처리 (전체 초기화)
        else if (command.equals("C")) {
            resetCalculator();
        }
        // "CE" 버튼 처리 (현재 입력만 초기화)
        else if (command.equals("CE")) {
            textField.setText(""); // 현재 입력만 초기화
        }
        // "Exit" 버튼 처리 (계산기 종료)
        else if (command.equals("Exit")) {
            System.exit(0); // 계산기 종료
        }
    }

    // 계산 수행 및 결과 표시
    private void calculateResult() {
        double result = 0;

        switch (currentOperator) {
            case "+":
                result = operand1 + operand2;
                break;
            case "-":
                result = operand1 - operand2;
                break;
            case "×":
                result = operand1 * operand2;
                break;
            case "÷":
                if (operand2 != 0) {
                    result = operand1 / operand2;
                } else {
                    resultField.setText("Error");  // 나누기 0 에러 처리
                    resetOperatorState();
                    return;
                }
                break;
            default:
                break;
        }

        // 결과 필드에 출력
        if (result == (int) result) {
            resultField.setText(String.format("%d", (int) result));
        } else {
            resultField.setText(String.valueOf(result));
        }

        // 중간 결과 및 상태 업데이트
        operand1 = result;         // 결과를 다음 연산의 피연산자로 사용
        currentOperator = pendingOperator; // 대기 연산자를 현재 연산자로 갱신
        pendingOperator = "";      // 대기 연산자 초기화
    }

    // 계산기 초기화
    private void resetCalculator() {
        textField.setText("");  // 입력 필드 초기화
        resultField.setText("");  // 결과 필드 초기화
        operand1 = operand2 = previousResult = 0;  // 연산 값 초기화
        currentOperator = pendingOperator = "";  // 연산자 초기화
        firstInput = true;  // 입력 초기화
    }

    // 연산자 상태 초기화
    private void resetOperatorState() {
        currentOperator = "";
        pendingOperator = "";
    }
}

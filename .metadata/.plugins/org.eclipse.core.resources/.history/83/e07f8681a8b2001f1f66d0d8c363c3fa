package Calculator3;


import java.util.Stack;

public class Calculator {
    private double result = 0; // 현재 계산 결과
    private String operator = ""; // 현재 연산자
    private String currentInput = "0"; // 현재 입력된 숫자 문자열
    private boolean isNewOperand = true; // 새로운 피연산자 여부

    public String getCurrentInput() {
        return currentInput;
    }

    public void handleInput(String input) {
        if ("0123456789".contains(input)) { // 숫자 입력
            if (isNewOperand) {
                currentInput = input; // 새 숫자로 대체
                isNewOperand = false;
            } else {
                currentInput += input; // 기존 숫자에 추가
            }
        } else if ("+-*/".contains(input)) { // 연산자 입력
            if (isNewOperand && !operator.isEmpty()) {
                // 새로운 피연산자 입력 전, 연산자를 대체
                operator = input;
            } else {
                calculate(Double.parseDouble(currentInput)); // 이전 숫자 계산
                operator = input; // 연산자 설정
                isNewOperand = true;
            }
        } else if ("=".equals(input)) { // "=" 입력
            calculate(Double.parseDouble(currentInput));
            operator = ""; // 연산자 초기화
            isNewOperand = true;
        } else if ("C".equals(input)) { // 전체 초기화
            clear();
        }
    }

    public String getDisplayText() {
        return isNewOperand ? formatResult(result) : currentInput;
    }

    private void calculate(double operand) {
        if (operator.isEmpty()) {
            result = operand; // 연산자가 없는 경우 단순 값 설정
        } else {
            switch (operator) {
                case "+":
                    result += operand;
                    break;
                case "-":
                    result -= operand;
                    break;
                case "*":
                    result *= operand;
                    break;
                case "/":
                    if (operand == 0) {
                        throw new ArithmeticException("Cannot divide by zero");
                    }
                    result /= operand;
                    break;
                default:
                    throw new UnsupportedOperationException("Unknown operator: " + operator);
            }
        }
        currentInput = formatResult(result);
    }

    public void clear() {
        result = 0;
        currentInput = "0";
        operator = "";
        isNewOperand = true;
    }

    private String formatResult(double value) {
        if (value == (long) value) {
            return String.valueOf((long) value); // 정수로 반환
        } else {
            return String.valueOf(value); // 실수로 반환
        }
    }
}
